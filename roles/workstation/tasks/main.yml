---
# This playbook contains common plays for workstation nodes.

- name: install python packages
  apt:
    name: "{{ item }}"
    state: latest
  with_items: "{{ workstation.python }}"
  tags: python

- name: install jupyter
  pip: name=jupyter executable=pip3
  tags: python

- name: check libisl13 version
  shell: dpkg -s libisl13 | grep Version
  ignore_errors: yes
  register: libisl13_version
  changed_when: false
  tags: frc

- name: install libisl13 deb
  apt: deb={{ libisl13.deb }}
  when: libisl13_version|failed or libisl13_version.stdout != libisl13.target_version
  tags: frc

- name: configure FRC toolchain PPA
  apt_repository:
    repo: 'deb http://ppa.launchpad.net/wpilib/toolchain/ubuntu vivid main'
    state: present
    filename: frc-toolchain
  tags: frc

- name: add FRC toolchain PPA public key
  apt_key: keyserver=keyserver.ubuntu.com id=d51c1f785d5d961140546f3aa06b9f8d55fc4dae
  tags: frc

- name: install dev tool packages
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items: "{{ workstation.tools }}"
  tags: tools, frc

- name: install dev tool gems
  gem:
    name: "{{ item }}"
    state: latest
    user_install: no
  with_items: "{{ workstation.gems }}"
  tags: gems

- name: install cuda packages
  apt:
    name: "{{ item }}"
    state: latest
  with_items: "{{ workstation.cuda }}"

- name: install libs packages
  apt:
    name: "{{ item }}"
    state: latest
  with_items: "{{ workstation.libs }}"

- name: clone OpenCV repository
  git: repo=http://github.com/opencv/opencv
       dest=/usr/local/src/opencv
       version=b34272f8a2517b98511d6a3fe9103cdb2a292bb1
  register: git_status

- name: create OpenCV build directory
  file: path=/usr/local/src/opencv/build state=directory mode=0755

- name: run cmake
  command: cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ..
  args:
    chdir: /usr/local/src/opencv/build
  when: git_status|changed

- name: build OpenCV
  command: make -j4
  args:
    chdir: /usr/local/src/opencv/build
  when: git_status|changed

- name: install OpenCV
  command: make install
  args:
    chdir: /usr/local/src/opencv/build
  when: git_status|changed

- name: refresh dynamic linker run-time bindings
  command: ldconfig
  when: git_status|changed

- name: check Atom version
  shell: dpkg -s atom | grep Version
  ignore_errors: yes
  register: atom_version
  changed_when: false
  tags: atom

- name: install Atom deb
  apt: deb={{ atom.deb }}
  when: atom_version|failed or atom_version.stdout != atom.target_version
  tags: atom
